/// Columns
//===============================================

columns(horizontal-properties, target = "*", margin-properties = none, padding-properties = none, width-properties = none, order = none){
    
    /// DEFINITIONS

    //defining columns number
    col-number = numIn(horizontal-properties);

    //defining cycle
    cycle = 0;
    if(width-properties != none){
        total-width = 0;
        for width in width-properties{
            total-width += width;
            if(total-width <= col-number){
                cycle+=1;
            }
            else{
                error("Total width greater than columns number !")
            }
        }
    }
    else{
        cycle = col-number;
        for i in (1..cycle){
            width-properties[(i - 1)] = 1;
        }
    }

    //defining nth mode
    nth = "nth-child"
    if(target != "*"){
        nth = "nth-of-type";
    }

    //defining total margin
        if(margin-properties != none){
            base-margin = numIn(margin-properties);
            if(space-around in margin-properties){
                total-margin = base-margin*2*cycle;
            }
            else if(space-between in margin-properties){
                total-margin = base-margin*(cycle - 1);
            }
            else if(equal in margin-properties){
                total-margin = base-margin*(cycle + 1);
            }
            else{
                total-margin = base-margin*cycle;
            }
        }


    //defining order
    if(order == none || order == normal){
        for i in (1..cycle){
            order[(i - 1)] = i;
        }
    }
    if(right in horizontal-properties || reverse in horizontal-properties){
        order = reverse(order);
    }

    /// CALCULATIONS

    &>{target}{

        position: relative;
        float: left;

        //setting original offset
        original-offset-px = 0;
        original-offset-weight = 0;

        //applying cycle
        for i in (1..cycle) {
            final-index = (index(order,i) + 1);
            &:{nth}({cycle}n+{i}){
                if(final-index == 1){
                    clear: left;
                }
            
                //margin
                if(margin-properties != none){
                    column-margin(margin-properties,final-index); 
                }

                //padding
                if(padding-properties != none){
                   column-padding(padding-properties,final-index);              
                }
                
                //getting final offset
                final-offset-px = 0;
                final-offset-weight = 0;

                if(final-index>1){
                    for f in (1..(final-index - 1)) {
                        
                        final-offset-weight += width-properties[(f - 1)];
                        

                        if(margin-properties != none){
                            final-offset-px += local-margin(margin-properties,f);    
                            final-offset-px -= (total-margin/cycle);
                        }
                    }
                }

                left : "calc(%s + %s)" % (((final-offset-weight - original-offset-weight)*(100/col-number))% (final-offset-px - original-offset-px)px);
                width : "calc(%s - %s)" % ((width-properties[(final-index - 1)]*(100/col-number))% (total-margin/cycle)px);

            }

            //incrementing original offset
            original-offset-weight += width-properties[(final-index - 1)];

            if(margin-properties != none){
                original-offset-px += local-margin(margin-properties,final-index);
                original-offset-px -= (total-margin/cycle);
            }

        }

        {block}
    }

    //clearfix
    &:after, &:before {
        content: "";
        display: block;
        line-height: 0;
    }
    &:after {
        clear: both;
    }
}

//alias
col(properties){
    if(length(properties) == 1){
        +columns(properties, "*", 16px space-around, 16px space-around){
            {block}
        }
    }
    else{
        col-number = 0;
        for column in properties{
            col-number += column;
        }
        +columns(col-number, "*", 16px space-around, 16px space-around, properties){
            {block}
        }
    }
}